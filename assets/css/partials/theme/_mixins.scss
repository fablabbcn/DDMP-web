// mixins
@mixin display-flex {
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex-wrap($wrap: nowrap) {
  -webkit-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}

@mixin align-items($align: stretch) {
  @if $align == flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  }
  @else if $align == flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  }
  @else {
    -webkit-box-align: $align;
    -ms-flex-align: $align;
  }

  -webkit-align-items: $align;
  -moz-align-items: $align;
  align-items: $align;
}

@mixin justify-content($justify-content: flex-start) {
  @if $justify-content == flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  }
  @else if $justify-content == flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  }
  @else if $justify-content == space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
  }
  @else if $justify-content == space-around {
    -ms-flex-pack: distribute;
  }
  @else {
    -webkit-box-pack: $justify-content;
    -ms-flex-pack: $justify-content;
  }

  -webkit-justify-content: $justify-content;
  -moz-justify-content: $justify-content;
  justify-content: $justify-content;
}

@mixin flex($flex: 0 1 auto) {
  -webkit-flex: $flex;
  -ms-flex: $flex;
  flex: $flex;
}

@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
  -moz-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}

@mixin transform($transform) {
  -webkit-transform: $transform;
  transform: $transform;
}

@mixin super-linear-gradient($angle, $color-stops...) {
  $_angle-with-vendor-prefix: "";
  $_angle: "";

  @if $angle == "to top" or $angle == "bottom" {
    $_angle-with-vendor-prefix: bottom;
    $_angle: to top;
  }
  @else if $angle == "to right" or $angle == "left" {
    $_angle-with-vendor-prefix: left;
    $_angle: to right;
  }
  @else if $angle == "to bottom" or $angle == "top" {
    $_angle-with-vendor-prefix: top;
    $_angle: to bottom;
  }
  @else if $angle == "to left" or $angle == "right" {
    $_angle-with-vendor-prefix: right;
    $_angle: to left;
  }
  @else if $angle == "to top right" or $angle == "bottom left" {
    $_angle-with-vendor-prefix: bottom left;
    $_angle: to top right;
  }
  @else if $angle == "to bottom right" or $angle == "top left" {
    $_angle-with-vendor-prefix: top left;
    $_angle: to bottom right;
  }
  @else if $angle == "to bottom left" or $angle == "top right" {
    $_angle-with-vendor-prefix: top right;
    $_angle: to bottom left;
  }
  @else if $angle == "to top left" or $angle == "bottom right" {
    $_angle-with-vendor-prefix: bottom right;
    $_angle: to top left;
  }
  @else {
    $_angle-with-vendor-prefix: $angle % 360;
    $_angle: (90 - $angle) % 360;
  }

  background: -webkit-linear-gradient($_angle-with-vendor-prefix, $color-stops);
  background: -moz-linear-gradient($_angle-with-vendor-prefix, $color-stops);
  background: -o-linear-gradient($_angle-with-vendor-prefix, $color-stops);
  background: linear-gradient($_angle, $color-stops);
}

@mixin position-side() {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
